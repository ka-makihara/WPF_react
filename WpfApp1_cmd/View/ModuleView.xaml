<UserControl x:Class="WpfApp1_cmd.View.ModuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
             xmlns:local="clr-namespace:WpfApp1_cmd.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:viewmodel="clr-namespace:WpfApp1_cmd.ViewModel"
             xmlns:vc="clr-namespace:WpfApp1_cmd.ValueConverter"
             xmlns:core="clr-namespace:WpfApp1_cmd.Core"
             xmlns:models="clr-namespace:WpfApp1_cmd.Models"
             d:DataContext="{d:DesignInstance Type=viewmodel:ModuleViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="350" d:DesignWidth="800">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />
    </UserControl.Resources>
    
    <Grid>
         <!-- 意味不明だが必要　-->
        <FrameworkElement x:Name="DataContextProxy" DataContext="{Binding}" />

         <mah:MetroHeader mah:HeaderedControlHelper.HeaderFontSize="22" Header="UniitVersions">
            <mah:MetroHeader.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" UseLayoutRounding="True">
                        <Grid>
                            <TextBlock Margin="0,4" HorizontalAlignment="Left" VerticalAlignment="Bottom" Text="Transfer Select" />
                            <mah:ToggleSwitch Margin="0"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=mah:MetroHeader}, Path=DataContext.IsUnitSelectToggleEnabled.Value}"
                                              IsOn="{Binding RelativeSource={RelativeSource AncestorType=mah:MetroHeader}, Path=DataContext.IsUnitCheckBoxEnabled}"
                                              OffContent="UnitSelect Off"
                                              OnContent="UnitSelect On" />

                        </Grid>
                        <Separator />
                    </StackPanel>
                </DataTemplate>
            </mah:MetroHeader.HeaderTemplate>

            <DataGrid x:Name="MetroDataGrid" Margin="5" AutoGenerateColumns="False"
                      EnableColumnVirtualization="True" EnableRowVirtualization="True"
                      HeadersVisibility="All"
                      ItemsSource="{Binding UnitVersions}"
                      RowHeaderWidth="2"
                      CanUserAddRows="False"
                      SelectionUnit="FullRow"
                      SelectionMode="Extended"
                      GridLinesVisibility="All"
                      VirtualizingPanel.IsVirtualizingWhenGrouping="True">
                <!--
                <mah:DataGridHelper.AutoGeneratedComboBoxColumnEditingStyle>
                    <Style BasedOn="{StaticResource MahApps.Styles.ComboBox.DataGrid.Editing}" TargetType="{x:Type ComboBox}">
                        <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True" />
                    </Style>
                </mah:DataGridHelper.AutoGeneratedComboBoxColumnEditingStyle>
                -->

                <DataGrid.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource MahApps.Styles.GroupItem.DataGrid}" >
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding DataContext.IsSelectedGroup, Source={x:Reference DataContextProxy}}" >
                                        <!--
                                    <CheckBox >
                                        IsChecked="{Binding DataContext.IsGroupChecked, 
                                              RelativeSource={RelativeSource AncestorType=DataGrid}}" >
                                  Command="{Binding DataContext.GroupCheckCommand2, 
                                            RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                  CommandParameter="{Binding}" >
                                  -->
                                  
                                        <CheckBox.Style>
                                            <Style BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}" TargetType="{x:Type CheckBox}">
                                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                <Setter Property="MinHeight" Value="0" />
                                                <Setter Property="MinWidth" Value="0" />
                                            </Style>
                                        </CheckBox.Style>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <rp:EventToReactiveCommand Command="{Binding DataContext.GroupCheckCommand, Source={x:Reference DataContextProxy}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                    <TextBlock VerticalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} - {1}">
                                                <Binding Path="Name" />
                                                <Binding Path="ItemCount" Converter="{vc:ItemCountConverter}"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                
                <DataGrid.Columns>
                     <DataGridCheckBoxColumn Binding="{Binding IsSelected.Value, UpdateSourceTrigger=PropertyChanged}" >
                        <DataGridCheckBoxColumn.ElementStyle>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                                <!-- IsEnabled or Visivility どちらか一方だけで良いと思うが、最終的に決める-->
                                <Setter Property="IsEnabled" Value="{Binding DataContext.IsUnitCheckBoxEnabled, Source={x:Reference DataContextProxy}}" />
                                <Setter Property="Visibility" Value="{Binding DataContext.IsUnitCheckBoxEnabled, Source={x:Reference DataContextProxy}, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Setter Property="ToolTip" Value="{Binding UpdateStatus}" />
                            </Style>
                        </DataGridCheckBoxColumn.ElementStyle>
                        <DataGridCheckBoxColumn.EditingElementStyle>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                                <Setter Property="IsEnabled" Value="{Binding DataContext.IsUnitCheckBoxEnabled, Source={x:Reference DataContextProxy}}" />
                                <Setter Property="Visibility" Value="{Binding DataContext.IsUnitCheckBoxEnabled, Source={x:Reference DataContextProxy}, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Setter Property="ToolTip" Value="{Binding UpdateStatus}" />
                            </Style>
                        </DataGridCheckBoxColumn.EditingElementStyle>

                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Transparent">
                                <CheckBox Content="All" IsChecked="{Binding DataContext.IsAllSelected, Source={x:Reference DataContextProxy}}" />
                            </Border> 
                        </DataGridCheckBoxColumn.Header>
                        <!--
                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" >
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style> 
                        </DataGridCheckBoxColumn.HeaderStyle>
                        -->
                    </DataGridCheckBoxColumn>

                    <materialDesign:DataGridTextColumn 
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="Unit" FontSize="16" FontFamily="Arial" Width="200" MinWidth="200" Binding="{Binding Name}" IsReadOnly="True">
                    </materialDesign:DataGridTextColumn>

                    <materialDesign:DataGridTextColumn
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="PreviousVersion" FontSize="16" FontFamily="Arial" Width="180" MinWidth="180" Binding="{Binding CurVersion}" IsReadOnly="True">
                    </materialDesign:DataGridTextColumn>

                    <materialDesign:DataGridTextColumn
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="UpdateVersion" FontSize="16" FontFamily="Arial" Width="180" MinWidth="180" Binding="{Binding NewVersion}" IsReadOnly="True">
                    </materialDesign:DataGridTextColumn>

                </DataGrid.Columns>
            </DataGrid>
        </mah:MetroHeader>
    </Grid>
</UserControl>
